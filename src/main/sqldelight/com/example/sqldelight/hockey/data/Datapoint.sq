CREATE TABLE IF NOT EXISTS Datapoint (
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT ,
  mistifier INTEGER NOT NULL,
  light INTEGER NOT NULL,
  fan1 INTEGER NOT NULL,
  fan2 INTEGER NOT NULL,
  pump1 INTEGER NOT NULL,
  pump2 INTEGER NOT NULL,
  temperature INTEGER NOT NULL,
  humidity INTEGER NOT NULL,
  waterLevel INTEGER NOT NULL,
  soilHumidity1 INTEGER NOT NULL,
  soilHumidity2 INTEGER NOT NULL
);

CREATE TRIGGER IF NOT EXISTS cleanup_trigger AFTER INSERT ON Datapoint BEGIN
     DELETE FROM Datapoint WHERE rowid < ((SELECT last_insert_rowid()) - 1000);
END;

INSERT OR IGNORE INTO Datapoint (mistifier,light,fan1,fan2,pump1,pump2,temperature,humidity,waterLevel,soilHumidity1,soilHumidity2)
VALUES ( 0,0,0,0,0,0,0,0,0,0,0);
INSERT OR IGNORE INTO Datapoint (mistifier,light,fan1,fan2,pump1,pump2,temperature,humidity,waterLevel,soilHumidity1,soilHumidity2)
VALUES ( 1,0,0,0,0,0,0,0,0,0,0);
INSERT OR IGNORE INTO Datapoint (mistifier,light,fan1,fan2,pump1,pump2,temperature,humidity,waterLevel,soilHumidity1,soilHumidity2)
VALUES ( 0,1,0,0,0,0,0,0,0,0,0);
INSERT OR IGNORE INTO Datapoint (mistifier,light,fan1,fan2,pump1,pump2,temperature,humidity,waterLevel,soilHumidity1,soilHumidity2)
VALUES ( 0,0,1,0,0,0,0,0,0,0,0);

selectAll:
SELECT *
FROM Datapoint;

latest:
SELECT *
FROM Datapoint
ORDER BY id DESC LIMIT 1;

insert:
INSERT INTO Datapoint(mistifier,light,fan1,fan2,pump1,pump2,temperature,humidity,waterLevel,soilHumidity1,soilHumidity2)
VALUES ( ?,?,?,?,?,?,?,?,?,?,?);
